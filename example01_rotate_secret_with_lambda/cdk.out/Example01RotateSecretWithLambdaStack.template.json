{
  "Resources": {
    "SecretA720EF05": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Description": "My Secret",
        "GenerateSecretString": {
          "GenerateStringKey": "SecretKey",
          "SecretStringTemplate": "{}"
        },
        "Name": "example-secret"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "Example01RotateSecretWithLambdaStack/Secret/Resource"
      }
    },
    "SecretRotationSchedule49AED07D": {
      "Type": "AWS::SecretsManager::RotationSchedule",
      "Properties": {
        "SecretId": {
          "Ref": "SecretA720EF05"
        },
        "RotationLambdaARN": {
          "Fn::GetAtt": [
            "secretLambda0B818386",
            "Arn"
          ]
        },
        "RotationRules": {
          "AutomaticallyAfterDays": 1
        }
      },
      "Metadata": {
        "aws:cdk:path": "Example01RotateSecretWithLambdaStack/Secret/RotationSchedule/Resource"
      }
    },
    "SecretPolicy06C9821C": {
      "Type": "AWS::SecretsManager::ResourcePolicy",
      "Properties": {
        "ResourcePolicy": {
          "Statement": [
            {
              "Action": "secretsmanager:DeleteSecret",
              "Effect": "Deny",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "SecretId": {
          "Ref": "SecretA720EF05"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Example01RotateSecretWithLambdaStack/Secret/Policy/Resource"
      }
    },
    "secretLambdaServiceRole2D9EDD20": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Example01RotateSecretWithLambdaStack/secretLambda/ServiceRole/Resource"
      }
    },
    "secretLambdaServiceRoleDefaultPolicy81E933D0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue",
                "secretsmanager:PutSecretValue",
                "secretsmanager:UpdateSecretVersionStage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "SecretA720EF05"
              }
            },
            {
              "Action": "secretsmanager:GetRandomPassword",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "SecretA720EF05"
              }
            },
            {
              "Action": "secretmanager:PutSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Ref": "SecretA720EF05"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "secretLambdaServiceRoleDefaultPolicy81E933D0",
        "Roles": [
          {
            "Ref": "secretLambdaServiceRole2D9EDD20"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Example01RotateSecretWithLambdaStack/secretLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "secretLambda0B818386": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "21d92c474869e8209c9b95cf2c848d420c0a31f2028b86725bda0eaf741de564.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "secretLambdaServiceRole2D9EDD20",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "REGION": {
              "Ref": "AWS::Region"
            },
            "SECRET_NAME": "example-secret",
            "KEY_IN_SECRET_NAME": "SecretKey"
          }
        },
        "FunctionName": "secretLambdaFunction",
        "Handler": "index.handler",
        "Runtime": "nodejs12.x"
      },
      "DependsOn": [
        "secretLambdaServiceRoleDefaultPolicy81E933D0",
        "secretLambdaServiceRole2D9EDD20"
      ],
      "Metadata": {
        "aws:cdk:path": "Example01RotateSecretWithLambdaStack/secretLambda/Resource",
        "aws:asset:path": "asset.21d92c474869e8209c9b95cf2c848d420c0a31f2028b86725bda0eaf741de564",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "secretLambdaInvokeServicePrincipalsecretsmanageramazonawscom7D9A46DD": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "secretLambda0B818386",
            "Arn"
          ]
        },
        "Principal": "secretsmanager.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "Example01RotateSecretWithLambdaStack/secretLambda/InvokeServicePrincipal(secretsmanager.amazonaws.com)"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VQS47CMAw9C/vUTAGxByTWqBwAmcR0TJtEipMZoap3JymDBsTqffz3AuoVfM3wVyptuqrnMwzHiLpT2ToNQjpQFIsOWwo5NGm1u7g/1viIkb076m8yqacS+vAaEp+CpoPvWd+mlDdnVD3as0EY9snpUlpyXvmBgmWRrEbFaGFo/HNWxv++z36yPKFI3hw2BbKGbdIdxS0KjWoy85ktu/Z1ncJ33hmO0yTnDcFV5j/1GuplftNVmKuQXGRL0DzwDj+TY3hCAQAA"
      },
      "Metadata": {
        "aws:cdk:path": "Example01RotateSecretWithLambdaStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}